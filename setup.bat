@echo off
REM üöÄ Script de d√©marrage rapide pour Marmotte Mining Bot - Windows
REM Ce script configure automatiquement l'environnement de d√©veloppement

echo üöÄ D√©marrage de Marmotte Mining Bot pour Windows...
echo ================================================
echo.

REM Couleurs pour les messages (compatible Windows)
set "GREEN=[92m"
set "RED=[91m"
set "YELLOW=[93m"
set "BLUE=[94m"
set "NC=[0m"

REM V√©rification des pr√©requis
echo %BLUE%[INFO]%NC% V√©rification des pr√©requis...

REM V√©rifier Node.js
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo %RED%[ERROR]%NC% Node.js n'est pas install√©.
    echo T√©l√©chargez et installez Node.js depuis: https://nodejs.org/
    echo Red√©marrez votre terminal apr√®s l'installation.
    pause
    exit /b 1
) else (
    for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
    echo %GREEN%[SUCCESS]%NC% Node.js install√©: %NODE_VERSION%
)

REM V√©rifier npm
npm --version >nul 2>&1
if %errorlevel% neq 0 (
    echo %RED%[ERROR]%NC% npm n'est pas install√©.
    pause
    exit /b 1
) else (
    for /f "tokens=*" %%i in ('npm --version') do set NPM_VERSION=%%i
    echo %GREEN%[SUCCESS]%NC% npm install√©: v%NPM_VERSION%
)

REM V√©rifier Docker (optionnel)
docker --version >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=*" %%i in ('docker --version') do set DOCKER_VERSION=%%i
    echo %GREEN%[SUCCESS]%NC% Docker disponible: %DOCKER_VERSION%
    set USE_DOCKER=true
) else (
    echo %YELLOW%[WARNING]%NC% Docker non trouv√©. Installation manuelle de PostgreSQL et Redis requise.
    set USE_DOCKER=false
)

echo.

REM Installation des d√©pendances
echo %BLUE%[INFO]%NC% Installation des d√©pendances npm...
call npm install
if %errorlevel% neq 0 (
    echo %RED%[ERROR]%NC% √âchec de l'installation des d√©pendances
    pause
    exit /b 1
)
echo %GREEN%[SUCCESS]%NC% D√©pendances install√©es avec succ√®s

echo.

REM Configuration des services
if "%USE_DOCKER%"=="true" (
    echo %BLUE%[INFO]%NC% D√©marrage des services Docker (PostgreSQL et Redis)...
    docker-compose up -d postgres redis
    if %errorlevel% neq 0 (
        echo %RED%[ERROR]%NC% √âchec du d√©marrage des services Docker
        pause
        exit /b 1
    )
    echo %GREEN%[SUCCESS]%NC% Services Docker d√©marr√©s
    echo %BLUE%[INFO]%NC% Attente de la disponibilit√© de PostgreSQL...
    timeout /t 10 /nobreak >nul
) else (
    echo %YELLOW%[WARNING]%NC% Docker non disponible. Instructions pour installation manuelle:
    echo.
    echo PostgreSQL:
    echo 1. T√©l√©chargez depuis: https://www.postgresql.org/download/windows/
    echo 2. Installez avec les param√®tres par d√©faut
    echo 3. Cr√©ez une base 'marmotte_mining'
    echo.
    echo Redis:
    echo 1. T√©l√©chargez depuis: https://github.com/MicrosoftArchive/redis/releases
    echo 2. Ou utilisez WSL: wsl --install puis sudo apt install redis-server
    echo.
    set /p continue="Appuyez sur Entr√©e apr√®s avoir install√© PostgreSQL et Redis..."
)

echo.

REM Configuration du fichier .env
if not exist ".env" (
    echo %BLUE%[INFO]%NC% Cr√©ation du fichier .env...
    copy .env.example .env >nul
    
    if "%USE_DOCKER%"=="true" (
        REM Configuration automatique pour Docker
        powershell -Command "(Get-Content .env) -replace 'DATABASE_URL=.*', 'DATABASE_URL=\"postgresql://marmotte_user:marmotte_password@localhost:5432/marmotte_mining?schema=public\"' | Set-Content .env"
        powershell -Command "(Get-Content .env) -replace 'REDIS_URL=.*', 'REDIS_URL=\"redis://localhost:6379\"' | Set-Content .env"
    )
    
    echo %GREEN%[SUCCESS]%NC% Fichier .env cr√©√©
    echo.
    echo %YELLOW%[WARNING]%NC% ‚ö†Ô∏è  IMPORTANT: Configurez votre token Discord dans le fichier .env
    echo   1. Allez sur https://discord.com/developers/applications
    echo   2. Cr√©ez une application et un bot
    echo   3. Copiez le token et l'ID client dans .env
    echo   4. Ajoutez votre serveur Discord ID
    echo.
    echo Le fichier .env va s'ouvrir automatiquement...
    timeout /t 3 /nobreak >nul
    notepad .env
    echo.
    set /p discord_configured="Avez-vous configur√© votre token Discord ? (o/N): "
    if /i not "%discord_configured%"=="o" (
        echo %RED%[ERROR]%NC% Configuration du token Discord requise avant de continuer
        echo Ouvrez le fichier .env et configurez:
        echo   - DISCORD_TOKEN=votre_token_ici
        echo   - DISCORD_CLIENT_ID=votre_client_id_ici
        echo   - DISCORD_GUILD_ID=votre_serveur_id_ici
        pause
        exit /b 1
    )
) else (
    echo %GREEN%[SUCCESS]%NC% Fichier .env existant trouv√©
)

echo.

REM Configuration de la base de donn√©es
echo %BLUE%[INFO]%NC% Configuration de la base de donn√©es...

echo %BLUE%[INFO]%NC% G√©n√©ration du client Prisma...
call npm run db:generate
if %errorlevel% neq 0 (
    echo %RED%[ERROR]%NC% √âchec de la g√©n√©ration du client Prisma
    pause
    exit /b 1
)

echo %BLUE%[INFO]%NC% Application des migrations de base de donn√©es...
call npm run db:migrate
if %errorlevel% neq 0 (
    echo %RED%[ERROR]%NC% √âchec de la configuration de la base de donn√©es
    echo V√©rifiez que PostgreSQL est d√©marr√© et accessible
    pause
    exit /b 1
)

echo %GREEN%[SUCCESS]%NC% Base de donn√©es configur√©e avec succ√®s

echo.

REM Test de la configuration
echo %BLUE%[INFO]%NC% Test de la configuration...
call npm run build
if %errorlevel% neq 0 (
    echo %RED%[ERROR]%NC% √âchec de la compilation TypeScript
    pause
    exit /b 1
)

echo %GREEN%[SUCCESS]%NC% Compilation TypeScript r√©ussie

echo.

REM D√©marrage du bot
echo %GREEN%[SUCCESS]%NC% üéâ Configuration termin√©e avec succ√®s !
echo.
echo %BLUE%[INFO]%NC% Commandes disponibles:
echo   npm run dev     - D√©marrage en mode d√©veloppement
echo   npm run build   - Compilation du projet
echo   npm start       - D√©marrage en mode production
echo   npm run db:studio - Interface graphique de la base
echo.

set /p start_now="Voulez-vous d√©marrer le bot maintenant ? (O/n): "
if /i not "%start_now%"=="n" (
    echo %BLUE%[INFO]%NC% D√©marrage du bot en mode d√©veloppement...
    call npm run dev
) else (
    echo %BLUE%[INFO]%NC% Pour d√©marrer le bot plus tard, utilisez: npm run dev
)

pause